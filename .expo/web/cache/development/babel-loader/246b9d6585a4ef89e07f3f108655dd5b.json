{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\e ride 7\\\\screens\\\\Ride.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport firebase from \"firebase\";\nimport db from \"../config\";\n\nvar bgImage = require(\"../assets/background2.png\");\n\nvar appIcon = require(\"../assets/appIcon.png\");\n\nvar RideScreen = function (_Component) {\n  _inherits(RideScreen, _Component);\n\n  var _super = _createSuper(RideScreen);\n\n  function RideScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RideScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getCameraPermissions = function _callee() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                domState: \"scanner\",\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n\n              _this.setState({\n                bikeId: data,\n                domState: \"normal\",\n                scanned: true\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee3() {\n      var _this$state, bikeId, userId, transactionType, isEligible, _this$state2, bikeType, userName, _this$state3;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$state = _this.state, bikeId = _this$state.bikeId, userId = _this$state.userId;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(_this.getBikeDetails(bikeId));\n\n            case 3:\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(_this.getUserDetails(userId));\n\n            case 5:\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(_this.checkBikeAvailability(bikeId));\n\n            case 7:\n              transactionType = _context3.sent;\n\n              if (transactionType) {\n                _context3.next = 13;\n                break;\n              }\n\n              _this.setState({\n                bikeId: \"\"\n              });\n\n              Alert.alert(\"Kindly enter/scan valid bike id\");\n              _context3.next = 28;\n              break;\n\n            case 13:\n              if (!(transactionType === \"under_maintenance\")) {\n                _context3.next = 17;\n                break;\n              }\n\n              _this.setState({\n                bikeId: \"\"\n              });\n\n              _context3.next = 28;\n              break;\n\n            case 17:\n              if (!(transactionType === \"rented\")) {\n                _context3.next = 24;\n                break;\n              }\n\n              _context3.next = 20;\n              return _regeneratorRuntime.awrap(_this.checkUserEligibilityForStartRide(userId));\n\n            case 20:\n              isEligible = _context3.sent;\n\n              if (isEligible) {\n                _this$state2 = _this.state, bikeType = _this$state2.bikeType, userName = _this$state2.userName;\n\n                _this.assignBike(bikeId, userId, bikeType, userName);\n\n                Alert.alert(\"You have rented the bike for next 1 hour. Enjoy your ride!!!\");\n\n                _this.setState({\n                  bikeAssigned: true\n                });\n              }\n\n              _context3.next = 28;\n              break;\n\n            case 24:\n              _context3.next = 26;\n              return _regeneratorRuntime.awrap(_this.checkUserEligibilityForEndRide(bikeId, userId));\n\n            case 26:\n              isEligible = _context3.sent;\n\n              if (isEligible) {\n                _this$state3 = _this.state, bikeType = _this$state3.bikeType, userName = _this$state3.userName;\n\n                _this.returnBike(bikeId, userId, bikeType, userName);\n\n                Alert.alert(\"We hope you enjoyed your ride\");\n\n                _this.setState({\n                  bikeAssigned: false\n                });\n              }\n\n            case 28:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getBikeDetails = function (bikeId) {\n      bikeId = bikeId.trim();\n      db.collection(\"bicycles\").where(\"id\", \"==\", bikeId).get().then(function (snapshot) {\n        snapshot.docs.map(function (doc) {\n          _this.setState({\n            bikeType: doc.data().bike_type\n          });\n        });\n      });\n    };\n\n    _this.getUserDetails = function (userId) {\n      db.collection(\"users\").where(\"id\", \"==\", userId).get().then(function (snapshot) {\n        snapshot.docs.map(function (doc) {\n          _this.setState({\n            userName: doc.data().name,\n            userId: doc.data().id,\n            bikeAssigned: doc.data().bike_assigned\n          });\n        });\n      });\n    };\n\n    _this.checkBikeAvailability = function _callee4(bikeId) {\n      var bikeRef, transactionType;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"bicycles\").where(\"id\", \"==\", bikeId).get());\n\n            case 2:\n              bikeRef = _context4.sent;\n              transactionType = \"\";\n\n              if (bikeRef.docs.length == 0) {\n                transactionType = false;\n              } else {\n                bikeRef.docs.map(function (doc) {\n                  if (!doc.data().under_maintenance) {\n                    transactionType = doc.data().is_bike_available ? \"rented\" : \"return\";\n                  } else {\n                    transactionType = \"under_maintenance\";\n                    Alert.alert(doc.data().maintenance_message);\n                  }\n                });\n              }\n\n              return _context4.abrupt(\"return\", transactionType);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkUserEligibilityForStartRide = function _callee5(userId) {\n      var userRef, isUserEligible;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"users\").where(\"id\", \"==\", userId).get());\n\n            case 2:\n              userRef = _context5.sent;\n              isUserEligible = false;\n\n              if (userRef.docs.length == 0) {\n                _this.setState({\n                  bikeId: \"\"\n                });\n\n                isUserEligible = false;\n                Alert.alert(\"Invalid user id\");\n              } else {\n                userRef.docs.map(function (doc) {\n                  if (!doc.data().bike_assigned) {\n                    isUserEligible = true;\n                  } else {\n                    isUserEligible = false;\n                    Alert.alert(\"End the current ride to rent another bike.\");\n\n                    _this.setState({\n                      bikeId: \"\"\n                    });\n                  }\n                });\n              }\n\n              return _context5.abrupt(\"return\", isUserEligible);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkUserEligibilityForEndRide = function _callee6(bikeId, userId) {\n      var transactionRef, isUserEligible;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"bike_id\", \"==\", bikeId).limit(1).get());\n\n            case 2:\n              transactionRef = _context6.sent;\n              isUserEligible = \"\";\n              transactionRef.docs.map(function (doc) {\n                var lastBikeTransaction = doc.data();\n\n                if (lastBikeTransaction.user_id === userId) {\n                  isUserEligible = true;\n                } else {\n                  isUserEligible = false;\n                  Alert.alert(\"This bike is rented by another user\");\n\n                  _this.setState({\n                    bikeId: \"\"\n                  });\n                }\n              });\n              return _context6.abrupt(\"return\", isUserEligible);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.assignBike = function _callee7(bikeId, userId, bikeType, userName) {\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                user_id: userId,\n                user_name: userName,\n                bike_id: bikeId,\n                bike_type: bikeType,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transaction_type: \"rented\"\n              });\n              db.collection(\"bicycles\").doc(bikeId).update({\n                is_bike_available: false\n              });\n              db.collection(\"users\").doc(userId).update({\n                bike_assigned: true\n              });\n\n              _this.setState({\n                bikeId: \"\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.returnBike = function _callee8(bikeId, userId, bikeType, userName) {\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                user_id: userId,\n                user_name: userName,\n                bike_id: bikeId,\n                bike_type: bikeType,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transaction_type: \"return\"\n              });\n              db.collection(\"bicycles\").doc(bikeId).update({\n                is_bike_available: true\n              });\n              db.collection(\"users\").doc(userId).update({\n                bike_assigned: false\n              });\n\n              _this.setState({\n                bikeId: \"\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      bikeId: \"\",\n      userId: \"\",\n      domState: \"normal\",\n      hasCameraPermissions: null,\n      scanned: false,\n      bikeType: \"\",\n      userName: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(RideScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state4 = this.state,\n          bikeId = _this$state4.bikeId,\n          userId = _this$state4.userId,\n          domState = _this$state4.domState,\n          scanned = _this$state4.scanned,\n          bikeAssigned = _this$state4.bikeAssigned;\n\n      if (domState !== \"normal\") {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return React.createElement(KeyboardAvoidingView, {\n        behavior: \"padding\",\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.upperContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        source: appIcon,\n        style: styles.appIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }\n      }, \"e-ride\"), React.createElement(Text, {\n        style: styles.subtitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }\n      }, \"A Eco-Friendly Ride\")), React.createElement(View, {\n        style: styles.lowerContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.textinputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: [styles.textinput, {\n          width: \"82%\"\n        }],\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            userId: text\n          });\n        },\n        placeholder: \"User Id\",\n        placeholderTextColor: \"#FFFFFF\",\n        value: userId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: [styles.textinputContainer, {\n          marginTop: 25\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textinput,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            bikeId: text\n          });\n        },\n        placeholder: \"Bicycle Id\",\n        placeholderTextColor: \"#FFFFFF\",\n        value: bikeId,\n        autoFocus: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.scanbutton,\n        onPress: function onPress() {\n          return _this2.getCameraPermissions();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.scanbuttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }\n      }, \"Scan\"))), React.createElement(TouchableOpacity, {\n        style: [styles.button, {\n          marginTop: 25\n        }],\n        onPress: this.handleTransaction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }\n      }, bikeAssigned ? \"End Ride\" : \"Unlock\"))));\n    }\n  }]);\n\n  return RideScreen;\n}(Component);\n\nexport { RideScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#D0E6F0\"\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  upperContainer: {\n    flex: 0.5,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  appIcon: {\n    width: 200,\n    height: 200,\n    resizeMode: \"contain\",\n    marginTop: 80\n  },\n  title: {\n    fontSize: 40,\n    fontFamily: \"Rajdhani_600SemiBold\",\n    paddingTop: 20,\n    color: \"#4C5D70\"\n  },\n  subtitle: {\n    fontSize: 20,\n    fontFamily: \"Rajdhani_600SemiBold\",\n    color: \"#4C5D70\"\n  },\n  lowerContainer: {\n    flex: 0.5,\n    alignItems: \"center\"\n  },\n  textinputContainer: {\n    borderWidth: 2,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    backgroundColor: \"#4C5D70\",\n    borderColor: \"#4C5D70\"\n  },\n  textinput: {\n    width: \"57%\",\n    height: 50,\n    padding: 10,\n    borderColor: \"#4C5D70\",\n    borderRadius: 10,\n    borderWidth: 3,\n    fontSize: 18,\n    backgroundColor: \"#F88379\",\n    fontFamily: \"Rajdhani_600SemiBold\",\n    color: \"#FFFFFF\"\n  },\n  scanbutton: {\n    width: 100,\n    height: 50,\n    backgroundColor: \"#FBE5C0\",\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  scanbuttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  button: {\n    width: \"43%\",\n    height: 55,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#FBE5C0\",\n    borderRadius: 20,\n    borderWidth: 2,\n    borderColor: \"#4C5D70\"\n  },\n  buttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/e ride 7/screens/Ride.js"],"names":["React","Component","Permissions","BarCodeScanner","firebase","db","bgImage","require","appIcon","RideScreen","props","getCameraPermissions","askAsync","CAMERA","status","setState","hasCameraPermissions","domState","scanned","handleBarCodeScanned","type","data","bikeId","handleTransaction","state","userId","getBikeDetails","getUserDetails","checkBikeAvailability","transactionType","Alert","alert","checkUserEligibilityForStartRide","isEligible","bikeType","userName","assignBike","bikeAssigned","checkUserEligibilityForEndRide","returnBike","trim","collection","where","get","then","snapshot","docs","map","doc","bike_type","name","id","bike_assigned","bikeRef","length","under_maintenance","is_bike_available","maintenance_message","userRef","isUserEligible","limit","transactionRef","lastBikeTransaction","user_id","add","user_name","bike_id","date","firestore","Timestamp","now","toDate","transaction_type","update","undefined","StyleSheet","absoluteFillObject","styles","container","upperContainer","title","subtitle","lowerContainer","textinputContainer","textinput","width","text","marginTop","scanbutton","scanbuttonText","button","buttonText","create","flex","backgroundColor","resizeMode","justifyContent","alignItems","height","fontSize","fontFamily","paddingTop","color","borderWidth","borderRadius","flexDirection","borderColor","padding","borderTopRightRadius","borderBottomRightRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Text,\r\n  ImageBackground,\r\n  Image,\r\n  Alert,\r\n  KeyboardAvoidingView,\r\n  ToastAndroid\r\n} from \"react-native\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\r\nimport firebase from \"firebase\";\r\nimport db from \"../config\";\r\n\r\nconst bgImage = require(\"../assets/background2.png\");\r\nconst appIcon = require(\"../assets/appIcon.png\");\r\n\r\nexport default class RideScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bikeId: \"\",\r\n      userId: \"\",\r\n      domState: \"normal\",\r\n      hasCameraPermissions: null,\r\n      scanned: false,\r\n      bikeType: \"\",\r\n      userName: \"\"\r\n    };\r\n  }\r\n\r\n  getCameraPermissions = async () => {\r\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n\r\n    this.setState({\r\n      /*status === \"granted\" is true when user has granted permission\r\n          status === \"granted\" is false when user has not granted the permission\r\n        */\r\n      hasCameraPermissions: status === \"granted\",\r\n      domState: \"scanner\",\r\n      scanned: false\r\n    });\r\n  };\r\n\r\n  handleBarCodeScanned = async ({ type, data }) => {\r\n    this.setState({\r\n      bikeId: data,\r\n      domState: \"normal\",\r\n      scanned: true\r\n    });\r\n  };\r\n\r\n  handleTransaction = async () => {\r\n    var { bikeId, userId } = this.state;\r\n    await this.getBikeDetails(bikeId);\r\n    await this.getUserDetails(userId);\r\n\r\n    var transactionType = await this.checkBikeAvailability(bikeId);\r\n\r\n    if (!transactionType) {\r\n      this.setState({ bikeId: \"\" });\r\n      Alert.alert(\"Kindly enter/scan valid bike id\");\r\n    } else if (transactionType === \"under_maintenance\") {\r\n      this.setState({\r\n        bikeId: \"\"\r\n      });\r\n    } else if (transactionType === \"rented\") {\r\n      var isEligible = await this.checkUserEligibilityForStartRide(userId);\r\n\r\n      if (isEligible) {\r\n        var { bikeType, userName } = this.state;\r\n        this.assignBike(bikeId, userId, bikeType, userName);\r\n        Alert.alert(\r\n          \"You have rented the bike for next 1 hour. Enjoy your ride!!!\"\r\n        );\r\n        this.setState({\r\n          bikeAssigned: true\r\n        });\r\n\r\n        // For Android users only\r\n        // ToastAndroid.show(\r\n        //   \"You have rented the bike for next 1 hour. Enjoy your ride!!\",\r\n        //   ToastAndroid.SHORT\r\n        // );\r\n      }\r\n    } else {\r\n      var isEligible = await this.checkUserEligibilityForEndRide(\r\n        bikeId,\r\n        userId\r\n      );\r\n\r\n      if (isEligible) {\r\n        var { bikeType, userName } = this.state;\r\n        this.returnBike(bikeId, userId, bikeType, userName);\r\n        Alert.alert(\"We hope you enjoyed your ride\");\r\n        this.setState({\r\n          bikeAssigned: false\r\n        });\r\n\r\n        // For Android users only\r\n        // ToastAndroid.show(\r\n        //   \"We hope you enjoyed your ride\",\r\n        //   ToastAndroid.SHORT\r\n        // );\r\n      }\r\n    }\r\n  };\r\n\r\n  getBikeDetails = bikeId => {\r\n    bikeId = bikeId.trim();\r\n    db.collection(\"bicycles\")\r\n      .where(\"id\", \"==\", bikeId)\r\n      .get()\r\n      .then(snapshot => {\r\n        snapshot.docs.map(doc => {\r\n          this.setState({\r\n            bikeType: doc.data().bike_type\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  getUserDetails = userId => {\r\n    db.collection(\"users\")\r\n      .where(\"id\", \"==\", userId)\r\n      .get()\r\n      .then(snapshot => {\r\n        snapshot.docs.map(doc => {\r\n          this.setState({\r\n            userName: doc.data().name,\r\n            userId: doc.data().id,\r\n            bikeAssigned: doc.data().bike_assigned\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  checkBikeAvailability = async bikeId => {\r\n    const bikeRef = await db\r\n      .collection(\"bicycles\")\r\n      .where(\"id\", \"==\", bikeId)\r\n      .get();\r\n\r\n    var transactionType = \"\";\r\n    if (bikeRef.docs.length == 0) {\r\n      transactionType = false;\r\n    } else {\r\n      bikeRef.docs.map(doc => {\r\n        if (!doc.data().under_maintenance) {\r\n          //if the bike is available then transaction type will be rented\r\n          // otherwise it will be return\r\n          transactionType = doc.data().is_bike_available ? \"rented\" : \"return\";\r\n        } else {\r\n          transactionType = \"under_maintenance\";\r\n          Alert.alert(doc.data().maintenance_message);\r\n        }\r\n      });\r\n    }\r\n\r\n    return transactionType;\r\n  };\r\n\r\n  checkUserEligibilityForStartRide = async userId => {\r\n    const userRef = await db\r\n      .collection(\"users\")\r\n      .where(\"id\", \"==\", userId)\r\n      .get();\r\n\r\n    var isUserEligible = false;\r\n    if (userRef.docs.length == 0) {\r\n      this.setState({\r\n        bikeId: \"\"\r\n      });\r\n      isUserEligible = false;\r\n      Alert.alert(\"Invalid user id\");\r\n    } else {\r\n      userRef.docs.map(doc => {\r\n        if (!doc.data().bike_assigned) {\r\n          isUserEligible = true;\r\n        } else {\r\n          isUserEligible = false;\r\n          Alert.alert(\"End the current ride to rent another bike.\");\r\n          this.setState({\r\n            bikeId: \"\"\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    return isUserEligible;\r\n  };\r\n\r\n  checkUserEligibilityForEndRide = async (bikeId, userId) => {\r\n    const transactionRef = await db\r\n      .collection(\"transactions\")\r\n      .where(\"bike_id\", \"==\", bikeId)\r\n      .limit(1)\r\n      .get();\r\n    var isUserEligible = \"\";\r\n    transactionRef.docs.map(doc => {\r\n      var lastBikeTransaction = doc.data();\r\n      if (lastBikeTransaction.user_id === userId) {\r\n        isUserEligible = true;\r\n      } else {\r\n        isUserEligible = false;\r\n        Alert.alert(\"This bike is rented by another user\");\r\n        this.setState({\r\n          bikeId: \"\"\r\n        });\r\n      }\r\n    });\r\n    return isUserEligible;\r\n  };\r\n\r\n  assignBike = async (bikeId, userId, bikeType, userName) => {\r\n    //add a transaction\r\n    db.collection(\"transactions\").add({\r\n      user_id: userId,\r\n      user_name: userName,\r\n      bike_id: bikeId,\r\n      bike_type: bikeType,\r\n      date: firebase.firestore.Timestamp.now().toDate(),\r\n      transaction_type: \"rented\"\r\n    });\r\n    //change bike status\r\n    db.collection(\"bicycles\")\r\n      .doc(bikeId)\r\n      .update({\r\n        is_bike_available: false\r\n      });\r\n    //change value  of bike assigned for user\r\n    db.collection(\"users\")\r\n      .doc(userId)\r\n      .update({\r\n        bike_assigned: true\r\n      });\r\n\r\n    // Updating local state\r\n    this.setState({\r\n      bikeId: \"\"\r\n    });\r\n  };\r\n\r\n  returnBike = async (bikeId, userId, bikeType, userName) => {\r\n    //add a transaction\r\n    db.collection(\"transactions\").add({\r\n      user_id: userId,\r\n      user_name: userName,\r\n      bike_id: bikeId,\r\n      bike_type: bikeType,\r\n      date: firebase.firestore.Timestamp.now().toDate(),\r\n      transaction_type: \"return\"\r\n    });\r\n    //change bike status\r\n    db.collection(\"bicycles\")\r\n      .doc(bikeId)\r\n      .update({\r\n        is_bike_available: true\r\n      });\r\n    //change value  of bike assigned for user\r\n    db.collection(\"users\")\r\n      .doc(userId)\r\n      .update({\r\n        bike_assigned: false\r\n      });\r\n\r\n    // Updating local state\r\n    this.setState({\r\n      bikeId: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { bikeId, userId, domState, scanned, bikeAssigned } = this.state;\r\n    if (domState !== \"normal\") {\r\n      return (\r\n        <BarCodeScanner\r\n          onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\r\n          style={StyleSheet.absoluteFillObject}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        <View style={styles.upperContainer}>\r\n          <Image source={appIcon} style={styles.appIcon} />\r\n          <Text style={styles.title}>e-ride</Text>\r\n          <Text style={styles.subtitle}>A Eco-Friendly Ride</Text>\r\n        </View>\r\n        <View style={styles.lowerContainer}>\r\n          <View style={styles.textinputContainer}>\r\n            <TextInput\r\n              style={[styles.textinput, { width: \"82%\" }]}\r\n              onChangeText={text => this.setState({ userId: text })}\r\n              placeholder={\"User Id\"}\r\n              placeholderTextColor={\"#FFFFFF\"}\r\n              value={userId}\r\n            />\r\n          </View>\r\n          <View style={[styles.textinputContainer, { marginTop: 25 }]}>\r\n            <TextInput\r\n              style={styles.textinput}\r\n              onChangeText={text => this.setState({ bikeId: text })}\r\n              placeholder={\"Bicycle Id\"}\r\n              placeholderTextColor={\"#FFFFFF\"}\r\n              value={bikeId}\r\n              autoFocus\r\n            />\r\n            <TouchableOpacity\r\n              style={styles.scanbutton}\r\n              onPress={() => this.getCameraPermissions()}\r\n            >\r\n              <Text style={styles.scanbuttonText}>Scan</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginTop: 25 }]}\r\n            onPress={this.handleTransaction}\r\n          >\r\n            <Text style={styles.buttonText}>\r\n              {bikeAssigned ? \"End Ride\" : \"Unlock\"}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#D0E6F0\"\r\n  },\r\n  bgImage: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\"\r\n  },\r\n  upperContainer: {\r\n    flex: 0.5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  appIcon: {\r\n    width: 200,\r\n    height: 200,\r\n    resizeMode: \"contain\",\r\n    marginTop: 80\r\n  },\r\n  title: {\r\n    fontSize: 40,\r\n    fontFamily: \"Rajdhani_600SemiBold\",\r\n    paddingTop: 20,\r\n    color: \"#4C5D70\"\r\n  },\r\n  subtitle: {\r\n    fontSize: 20,\r\n    fontFamily: \"Rajdhani_600SemiBold\",\r\n    color: \"#4C5D70\"\r\n  },\r\n  lowerContainer: {\r\n    flex: 0.5,\r\n    alignItems: \"center\"\r\n  },\r\n  textinputContainer: {\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#4C5D70\",\r\n    borderColor: \"#4C5D70\"\r\n  },\r\n  textinput: {\r\n    width: \"57%\",\r\n    height: 50,\r\n    padding: 10,\r\n    borderColor: \"#4C5D70\",\r\n    borderRadius: 10,\r\n    borderWidth: 3,\r\n    fontSize: 18,\r\n    backgroundColor: \"#F88379\",\r\n    fontFamily: \"Rajdhani_600SemiBold\",\r\n    color: \"#FFFFFF\"\r\n  },\r\n  scanbutton: {\r\n    width: 100,\r\n    height: 50,\r\n    backgroundColor: \"#FBE5C0\",\r\n    borderTopRightRadius: 10,\r\n    borderBottomRightRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  scanbuttonText: {\r\n    fontSize: 24,\r\n    color: \"#4C5D70\",\r\n    fontFamily: \"Rajdhani_600SemiBold\"\r\n  },\r\n  button: {\r\n    width: \"43%\",\r\n    height: 55,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#FBE5C0\",\r\n    borderRadius: 20,\r\n    borderWidth: 2,\r\n    borderColor: \"#4C5D70\"\r\n  },\r\n  buttonText: {\r\n    fontSize: 24,\r\n    color: \"#4C5D70\",\r\n    fontFamily: \"Rajdhani_600SemiBold\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}